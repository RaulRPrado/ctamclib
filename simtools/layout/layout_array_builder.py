import astropy.units as u
from astropy.table import QTable

from simtools import io_handler
from simtools.util import names
from simtools.visualization import legend_handlers as leg_h


class LayoutArrayBuilder:
    """
    Manage the array layout. It provides methods to create and plot a LayoutArray.
    """

    def __init__(self):
        """Initialize LayoutArrayBuilder."""
        self.io_handler = io_handler.IOHandler()
        self.telescope_object_dict = {}
        for step, telescope_type in enumerate(names.all_telescope_class_names):
            self.telescope_object_dict[telescope_type] = leg_h.all_telescope_objects[step]

    @staticmethod
    def telescope_layout_file_to_dict(file_name):
        """
        Read the telescope layout from ECSV layout file and returns a dictionary with the x, y, z \
        positions and the radius.
        Note: file_name is usually generated by self.export_telescope_list.

        Parameters
        ----------
        file_name: str
            Name of the ecsv file with telescope layout.

        Returns
        -------
        dict
            Dictionary with the telescope layout information.
        """

        telescopes = QTable.read(file_name)
        telescopes["radius"] = [
            float(telescopes.meta["corsika_sphere_radius"][tel_name_now[:3]].split()[0])
            for tel_name_now in telescopes["telescope_name"]
        ]
        telescopes["radius"].unit = u.Unit(
            telescopes.meta["corsika_sphere_radius"]["LST"].split()[1]
        )

        return telescopes
