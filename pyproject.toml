[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages=["simtools"]
include-package-data = true

[tool.setuptools_scm]
write_to = "simtools/_version.py"

[project]
name = "gammasimtools"
dynamic = ["version"]
description = "Tools for the Simulation System of the CTA Observatory"
readme = "README.rst"
license = { file="LICENSE" }
authors = [
  { name="simtools developers", email="simtools-developer@desy.de" }
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Astronomy",
]
requires-python = ">=3.9"
dependencies = [
    "astropy",
    "boost-histogram",
    "ctapipe",
    "eventio",
    "jsonschema",
    "matplotlib",
    "numpy",
    "pymongo",
    "pyproj",
    "python-dotenv",
    "pyyaml",
    "scipy",
    "toml",
]

[project.optional-dependencies]
"tests" = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]
"dev" = [
    "flake8",
    "pre-commit",
]
"doc" = [
    "numpydoc",
    "sphinx",
    "sphinx_rtd_theme",
]

[project.urls]
"documentation" = "https://gammasim.github.io/simtools/"
"repository" = "https://github.com/gammasim/simtools"
"bug tracker" = "https://github.com/gammasim/simtools/issues"

[project.scripts]
simtools-add-file-to-db = "simtools.applications.add_file_to_db:main"
simtools-compare-cumulative-psf = "simtools.applications.compare_cumulative_psf:main"
simtools-derive-mirror-rnda = "simtools.applications.derive_mirror_rnda:main"
simtools-get-file-from-db = "simtools.applications.get_file_from_db:main"
simtools-generate-corsika-histograms = "simtools.applications.generate_corsika_histograms:main"
simtools-generate-default-metadata = "simtools.applications.generate_default_metadata:main"
simtools-generate-simtel-array-histograms = "simtools.applications.generate_simtel_array_histograms:main"
simtools-get-parameter = "simtools.applications.get_parameter:main"
simtools-make-regular-arrays = "simtools.applications.make_regular_arrays:main"
simtools-plot-array-layout = "simtools.applications.plot_array_layout:main"
simtools-plot-simtel-histograms = "simtools.applications.plot_simtel_histograms:main"
simtools-print-array-elements = "simtools.applications.print_array_elements:main"
simtools-produce-array-config = "simtools.applications.produce_array_config:main"
simtools-production = "simtools.applications.production:main"
simtools-sim-showers-for-trigger-rates = "simtools.applications.sim_showers_for_trigger_rates:main"
simtools-simulate-prod = "simtools.applications.simulate_prod:main"
simtools-submit-data-from-external = "simtools.applications.submit_data_from_external:main"
simtools-tune-psf = "simtools.applications.tune_psf:main"
simtools-validate-camera-efficiency = "simtools.applications.validate_camera_efficiency:main"
simtools-validate-camera-fov = "simtools.applications.validate_camera_fov:main"
simtools-validate-file-using-schema = "simtools.applications.validate_file_using_schema:main"
simtools-validate-optics = "simtools.applications.validate_optics:main"

[tool.pylint.main]
# Good variable names which should always be accepted, separated by a comma.
good-names = ["e", "i", "j", "k", "x", "y", "n", "f", "r", "ex", "db", "im", "sh", "ax", "ce", "xx", "yy", "zz"]
# Maximum number of characters on a single line.
max-line-length = 100
# Maximum number of lines in a module.
max-module-lines = 1000
# Disable warnings
disable = ["logging-fstring-interpolation"]
# Ignore files
ignore = ["__init__.py", "scm_version.py", "_version.py"]

[tool.pylint."messages control"]
# See discussion in issue 521
# Agreed to not have module docstring (missing-module-docstring)
# Pylint cannot handle overload (used in pyproj; unpacking-non-sequence)
disable = ["missing-module-docstring", "unpacking-non-sequence"]
# see https://github.com/pylint-dev/pylint/issues/2289
generated-members = ["gist_heat_r"]

[tool.pylint.design]
# Maximum number of arguments for function / method (default=5).
max-args = 10
# Maximum number of locals for function / method body (default=15).
max-locals = 25

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion="6.0"
norecursedirs=["build", "docs/_build", "simtools/applications"]
addopts="-v --cov=simtools --cov-report=xml --cov-report=term"
testpaths="tests/unit_tests/"
# Ignore the warning about fontTools.misc.py23
filterwarnings="ignore:The py23 module has been deprecated:DeprecationWarning"
