---
name: CI-unittests
# Execute unit tests - pyflakes and pytest
#
env:
  DB_SERVER: ${{ secrets.DB_SERVER }}
  DB_API_USER: ${{ secrets.DB_API_USER }}
  DB_API_PW: ${{ secrets.DB_API_PW }}
  DB_API_PORT: ${{ secrets.DB_API_PORT }}

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize]
  push:
    branches:
    - master

jobs:

  unittests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        #        python-version: [3.8, 3.9, 3.10.4]
        python-version: [3.9]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install conda dependencies
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          # sed -i -e "s/- python/- python=$PYTHON_VERSION/g" environment.yml
          conda env create -f environment.yml
          conda activate simtools-dev
          echo 'source $CONDA/etc/profile.d/conda.sh' >> ~/.bash_profile
          echo 'conda activate simtools-dev' >> ~/.bash_profile
          echo 'pip install -e .' >> ~/.bash_profile
          python --version

      - name: pyflakes liniting
        shell: bash -leo pipefail {0}
        run: |
          conda install -q pyflakes
          pyflakes .

      - name: Unit tests
        shell: bash -l {0}
        run: pytest --durations=10 --cov --cov-report=xml

      - uses: codecov/codecov-action@v3.1.0
