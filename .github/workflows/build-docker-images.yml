# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: docker-simtools

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches: ["main"]
    types: [review_requested, ready_for_review]
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at 00:00 UTC

env:
  SIMTOOLS_DB_SERVER: ${{ secrets.DB_SERVER }}
  SIMTOOLS_DB_API_USER: ${{ secrets.DB_READ_USER }}
  SIMTOOLS_DB_API_PW: ${{ secrets.DB_READ_PW }}
  SIMTOOLS_DB_API_PORT: ${{ secrets.DB_API_PORT }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: user/app:test

jobs:

  build-simtools-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
#        type: ['dev', 'prod']
        type: ['prod']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: matrix.type == 'prod'
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
          images: ${{ env.REGISTRY }}/gammasim/simtools-${{ matrix.type }}
          flavor: latest=true

      - name: Build Docker image
        uses: docker/build-push-action@v5
        if: matrix.type == 'prod'
        with:
          context: .
          load: true
          file: ./docker/Dockerfile-${{ matrix.type }}
          tags: ${{ env.TEST_TAG }}

      - name: Test Docker image
        run: >
          docker run --rm -v "$(pwd):/workdir/external" ${{ env.TEST_TAG }} simtools-print-array-elements --config /workdir/external/tests/integration_tests/config/print_array_elements_utm_to_corsika.yml
#           -v "$(pwd):/workdir/external" ${{ env.TEST_TAG }} \
#           --input /workdir/external/tests/resources/telescope_positions-North-utm.ecsv \
#           --compact ground
        shell: /usr/bin/bash -e {0}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push:
            ${{ github.event_name == 'pull_request' || github.event_name == 'release' || github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true }}
          file: ./docker/Dockerfile-${{ matrix.type }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}-${{ matrix.type }}
