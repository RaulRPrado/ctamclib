# -*- coding: utf-8 -*-
#
# simtools configuration for sphinx
# This file does only contain a selection of the most common options. For a
#
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import sys

import yaml

import simtools.version

sys.path.insert(0, os.path.abspath("../../simtools"))
sys.path.insert(0, os.path.abspath("../../simtools/applications"))
sys.path.insert(0, os.path.abspath("../.."))


def get_authors_from_citation_file(file_name):
    """
    Read list of authors from CITATION.cff file

    """
    try:
        with open("../../CITATION.cff") as file:
            citation = yaml.safe_load(file)
    except FileNotFoundError:
        raise

    author = ""
    try:
        for person in citation["authors"]:
            author = author + person["given-names"] + " " + person["family-names"]
            author += " (" + person["affiliation"] + "), "
    except KeyError:
        pass
    return author[:-2]


# -- Project information -----------------------------------------------------

project = "simtools"
copyright = "2023, gammasim-tools, simtools developers"
author = get_authors_from_citation_file("../CITATION.cff")
rst_epilog = f"""
.. |author| replace:: {author}
"""

# The short X.Y version
version = str(simtools.version.__version__)
# The full version, including alpha/beta/rc tags
release = version

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
    "numpydoc",
]

autosectionlabel_prefix_document = True

# Display todos by setting to True
todo_include_todos = True

autodoc_mock_imports = [
    "matplotlib",
    "yaml",
    #    "numpy",
    "astropy",
    "bson",
    "pymongo",
    "gridfs",
    "scipy",
    "cycler",
    "eventio",
    "ctapipe",
]

# Change the look of autodoc classes
# napoleon_use_ivar = True
numpydoc_show_class_members = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst"]

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = "sphinx"
default_role = "py:obj"

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = "sphinx_rtd_theme"
# html_theme = "bizstyle"
html_theme = "alabaster"

html_title = f"{project} v{version} Manual"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    "description": f"Simulation Tools for CTA v{version}",
    "github_user": "gammasim",
    "github_repo": "simtools",
    "fixed_sidebar": True,
    "show_powered_by": False,
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = []

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}
html_sidebars = {
    "**": ["about.html", "navigation.html", "relations.html", "searchbox.html", "sourcelink.html"]
}
html_css_files = ["simtools.css"]
html_file_suffix = ".html"

# -- Options for HTMLHelp output ---------------------------------------------
# "<project> v<release> documentation".
html_title = f"{project} v{release}"

html_show_copyright = False

# Output file base name for HTML help builder.
htmlhelp_basename = "simtoolsdoc"

# -- Options for intersphinx extension ---------------------------------------
intersphinx_mapping = {
    "python": ("https://docs.python.org/3.9", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
    "scipy": ("https://docs.scipy.org/doc/scipy/", None),
    "astropy": ("https://docs.astropy.org/en/latest/", None),
    "matplotlib": ("https://matplotlib.org/stable", None),
}
